clear all
close all
clc

%Leonard Mikša - Sensitivity Optimization of 4th Order CBQ Structure Chebyshev BP Filter


%% Enter the parameters of the BP 4th order Chebyshev filter:
f_0 = 4000;                                                     %Central frequency [Hz]
B = 0.25;                                                       %Bandwidth (normalized)
alpha = -0.1;                                                   %Ripple [dB]


%% Calculations:
%Auxiliary variables:
epsilon = sqrt(10^(-0.1*alpha)-1)
k0 = 1/(sqrt(1 + epsilon^2))                                    %NOTE: if the filter's order is odd, set k0 to 1!

%Defining a 2nd order transfer function:
Hnp = tf([k0*0.8776], [1 1.2208 0.8776])

%Calculating parameters of the LP transfer function:
[wnp, zeta] = damp(Hnp);
wnp = wnp(1)
zeta = zeta(1);
Qnp = 1/(2*zeta)

%Calculating parameters of the BP sections:
Q = (Qnp/(sqrt(2)*wnp*B)) * sqrt(4+(B^2*wnp^2) + sqrt((4+B^2*wnp^2)^2-4*B^2*wnp^2/Qnp^2))
Wpp1 = (Q*wnp*B + sqrt(Q^2*B^2*wnp^2-4*Qnp^2))/(2*Qnp)
Wpp2 = 1/Wpp1
k1 = sqrt(k0)*Q*B*wnp/Wpp1
k2 = sqrt(k0)*Q*B*wnp/Wpp2


%% Normalized transfer function:
%Defining the BP transfer function:
Hpp1 = tf([k1*Wpp1/Q 0], [1 Wpp1/Q Wpp1^2]);
Hpp2 = tf([k2*Wpp2/Q 0], [1 Wpp2/Q Wpp2^2]);
disp('Normalized transfer function: ');
Hpp = Hpp1*Hpp2

%Time and frequency characteristic plots:
w = logspace(-1, 1, 5000);

%Magnitude and phase:
figure;
[mag, phase, w] = bode(Hpp, w);
mag = squeeze(mag);
phase = squeeze(phase);
semilogx(w, 20*log10(mag));
ylim([-66, 0]);
xlabel('\omega [rad/s]');
ylabel('A(\omega) [dB]');
title('Amplitudno-frekvencijska karakteristika normirane prijenosne funkcije');
grid on;
h = findall(gcf, 'Type', 'Line');
set(h, 'LineWidth', 1);
set(h, 'Color', 'k');
inset_ax = axes('Position', [0.64 0.65 0.25 0.25]);
box on;
hold on;
axes(inset_ax);
semilogx(w, 20*log10(mag), 'LineWidth', 1, 'Color', 'k');
xlim([0.8, 1.2]);
ylim([-0.4, 0]);
grid on;
set(inset_ax, 'XTick', [1], 'YTick', [-0.3, -0.2, -0.1, 0]);
hold off;

figure;
semilogx(w, phase);
xlabel('\omega [rad/s]');
ylabel('\phi(\omega) [°]');
title('Fazno-frekvencijska karakteristika normirane prijenosne funkcije');
grid on;
h = findall(gcf, 'Type', 'Line');
set(h, 'LineWidth', 1);
set(h, 'Color', 'k');

%Poles and zeros:
[z, p, k] = tf2zp(Hpp.Numerator{1}, Hpp.Denominator{1});
figure;
hold on;
plot(real(z), imag(z), 'ko', 'MarkerSize', 8, 'LineWidth', 1);
plot(real(p), imag(p), 'kx', 'MarkerSize', 8, 'LineWidth', 1);
xlabel('Realna os');
ylabel('Imaginarna os');
title('Raspored polova i nula normirane prijenosne funkcije');
grid on;
yline(0, '--k'); 
legend('Nule', 'Polovi');
box on;
hold off;

%Impulse and step responses:
figure;
[imp_norm, t] = impulse(Hpp);
plot(t, imp_norm);
axis tight;
ylim([-0.15 0.15]);
xlabel('t [s]');
ylabel('h(t)', 'FontSize', 14);
title('Impulsni odziv normirane prijenosne funkcije');
grid on;
h = findall(gcf, 'Type', 'Line');
set(h, 'LineWidth', 1);
set(h, 'Color', 'k');

figure;
[step_norm, t] = step(Hpp);
plot(t, step_norm);
axis tight;
ylim([-0.15 0.15]);
xlabel('t [s]');
ylabel('a(t)', 'FontSize', 14);
title('Skokovni odziv normirane prijenosne funkcije');
grid on;
h = findall(gcf, 'Type', 'Line');
set(h, 'LineWidth', 1);
set(h, 'Color', 'k');


%% Denormalized transfer function:
%Defining and plotting the denormalized transfer function obtained via the auxiliary .m file:
disp('Denormalized transfer function: ');
Hbp = tf ([3.4251e7 0 0], [1 7671.8 1.298e9 4.8459e12 3.9899e17])

%Time and frequency characteristic plots:
f = logspace(log10(400), log10(40000), 5000);
w = 2 * pi * f;

%Magnitude and phase:
figure;
[mag, phase, w] = bode(Hbp, w);
mag = squeeze(mag);
phase = squeeze(phase);
f = w / (2 * pi);             
semilogx(f, 20*log10(mag));
xlim([400, 40000]);
ylim([-66, 0]);
xlabel('f [Hz]');
ylabel('A(f) [dB]');
title('Amplitudno-frekvencijska karakteristika denormirane prijenosne funkcije');
grid on;
h = findall(gcf, 'Type', 'Line');
set(h, 'LineWidth', 1);  
set(h, 'Color', 'k');  
xticks([400, 4000, 40000]);
inset_ax = axes('Position', [0.64 0.65 0.25 0.25]);
box on;
hold on;
axes(inset_ax);
semilogx(f, 20*log10(mag), 'LineWidth', 1, 'Color', 'k');
xlim([3200, 4800]);
ylim([-0.4, 0]);
grid on;
set(inset_ax, 'XTick', [3500, 4000, 4500], 'YTick', [-0.3, -0.2, -0.1, 0]);
hold off;

figure;
semilogx(f, phase);
xlabel('f [Hz]');
ylabel('\phi(f) [°]');
xlim([400, 40000]);
xticks([400, 4000, 40000]);
title('Fazno-frekvencijska karakteristika denormirane prijenosne funkcije');
grid on;
h = findall(gcf, 'Type', 'Line');
set(h, 'LineWidth', 1);
set(h, 'Color', 'k');

%Poles and zeros:
[z, p, k] = tf2zp(Hbp.Numerator{1}, Hbp.Denominator{1});
figure;
hold on;
plot(real(z), imag(z), 'ko', 'MarkerSize', 8, 'LineWidth', 1);
plot(real(p), imag(p), 'kx', 'MarkerSize', 8, 'LineWidth', 1);
xlabel('Realna os');
ylabel('Imaginarna os');
title('Raspored polova i nula denormirane prijenosne funkcije');
grid on;
yline(0, '--k'); 
legend('Nule', 'Polovi');
box on;
hold off;

%Impulse and step responses:
figure;
[imp_denorm, t] = impulse(Hbp);
plot(t, imp_denorm);
axis tight;
ylim([-3200 3200]);
xlabel('t [s]');
ylabel('h(t)', 'FontSize', 14);
title('Impulsni odziv denormirane prijenosne funkcije');
grid on;
h = findall(gcf, 'Type', 'Line');
set(h, 'LineWidth', 1);
set(h, 'Color', 'k');

figure;
[step_denorm, t] = step(Hbp);
plot(t, step_denorm);
axis tight;
ylim([-0.15 0.15]);
xlabel('t [s]');
ylabel('a(t)', 'FontSize', 14);
title('Skokovni odziv denormirane prijenosne funkcije');
grid on;
h = findall(gcf, 'Type', 'Line');
set(h, 'LineWidth', 1);
set(h, 'Color', 'k');









%% Sensitivity calculation for cascade structure:
%Symbolic variables:
syms G1 G11 G12 G2 G3 G4 C1 C2 s w real
syms G5 G51 G52 G6 G7 G8 C3 C4 real

G1 = G11 + G12;
G5 = G51 + G52;
num = -(1 + (G4/G3)) * (G11/C1) * (1i*w);
den = -w^2 + (1i*w) * ((G2/C1) + (G2/C2) - (G1*G4)/(C1*G3)) + (G1*G2)/(C1*C2);
num2 = -(1 + (G8/G7)) * (G51/C3) * (1i*w);
den2 = -w^2 + (1i*w) * ((G6/C3) + (G6/C4) - (G5*G8)/(C3*G7)) + (G5*G6)/(C3*C4);

%|H(jw)|:
num_mag = sqrt(real(num)^2 + imag(num)^2);
den_mag = sqrt(real(den)^2 + imag(den)^2);
num_mag2 = sqrt(real(num2)^2 + imag(num2)^2);
den_mag2 = sqrt(real(den2)^2 + imag(den2)^2);
H_mag = num_mag / den_mag;
H_mag2 = num_mag2 / den_mag2;
H_magCAS = H_mag*H_mag2;
disp('|H(jw)| of cascade structure: ');
pretty(H_magCAS);

%Calculating Schoeffler sensitivity dH_mag/dx_i * X/H_mag:
SensC1 = schoeffler_sensitivity(H_magCAS, C1);     SensC12 = schoeffler_sensitivity(H_magCAS, C3);
SensC2 = schoeffler_sensitivity(H_magCAS, C2);     SensC22 = schoeffler_sensitivity(H_magCAS, C4);
SensR111 = schoeffler_sensitivity(H_magCAS, G11);  SensR112 = schoeffler_sensitivity(H_magCAS, G51);
SensR121 = schoeffler_sensitivity(H_magCAS, G12);  SensR122 = schoeffler_sensitivity(H_magCAS, G52);
SensR21 = schoeffler_sensitivity(H_magCAS, G2);    SensR22 = schoeffler_sensitivity(H_magCAS, G6);
SensR31 = schoeffler_sensitivity(H_magCAS, G3);    SensR32 = schoeffler_sensitivity(H_magCAS, G7);
SensR41 = schoeffler_sensitivity(H_magCAS, G4);    SensR42 = schoeffler_sensitivity(H_magCAS, G8);

%Declaring denormalized element values for cascade structure:
C1 = 1e-8;          C3 = 1e-8;
C2 = 1e-8;          C4 = 1e-8;
G11 = 1/48656;      G51 = 1/48663;
G12 = 1/3933.9;     G52 = 1/4775.8;
G2 = 1/3639.5;      G6 = 1/4348.9;
G3 = 1/7352.95;     G7 = 1/7352.95;
G4 = 1/3978.9;      G8 = 1/3978.9;


%% Calculating vector variables of sensitivity for each element:
f = logspace(log10(400), log10(40000), 10000);  
w = 2 * pi * f;

C1SENS = abs((C1 .* (((2 .* w.^2 .* (G2 ./ C1.^2 - (G4 .* (G11 + G12)) ./ (C1.^2 .* G3)) ...
    .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)) ...
    - (2 .* G2 .* (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)) .* (G11 + G12)) ...
    ./ (C1.^2 .* C2)) ...
    .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)) ...
    ./ (2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(3/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2)) ...
    - (G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2 .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)) ...
    ./ (C1.^3 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2) ...
    .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2))) ...
    .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2)) ...
    ./ (((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)));


C2SENS = abs((C2 .* ((2 .* G2 .* w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3))) ./ C2.^2 ...
    - (2 .* G2 .* (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)) .* (G11 + G12)) ./ (C1 .* C2.^2))) ...
    ./ (2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2)));


R111SENS = abs((G11 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2) ...
    .* ((((2 .* G2 .* (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2))) ./ (C1 .* C2) ...
    + (2 .* G4 .* w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3))) ./ (C1 .* G3)) ...
    .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)) ...
    ./ (2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(3/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2)) ...
    + (G11 .* w.^2 .* (G4 ./ G3 + 1).^2 ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)) ...
    ./ (C1.^2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2) ...
    .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2)))) ...
    ./ (((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)));

R121SENS = abs((G12 .* ((2 .* G2 .* (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2))) ./ (C1 .* C2) ...
    + (2 .* G4 .* w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3))) ./ (C1 .* G3))) ...
    ./ (2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2)));

R21SENS = abs(-(G2 .* (2 .* w.^2 .* (1 ./ C1 + 1 ./ C2) .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)) ...
    - (2 .* (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)) .* (G11 + G12)) ./ (C1 .* C2))) ...
    ./ (2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2)));

R31SENS = abs(-(G3 .* sqrt(w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2) ...
    .* sqrt(w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2) ...
    .* ((G4 .* G11.^2 .* w.^2 .* (G4 ./ G3 + 1) ...
    .* sqrt((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2)) ...
    ./ (C1.^2 .* G3.^2 .* sqrt(w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2) ...
    .* sqrt(w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2) ...
    .* sqrt((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2)) ...
    + (G4 .* w.^2 .* (G11 + G12) .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)) ...
    .* sqrt((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2) ...
    .* sqrt((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2)) ...
    ./ (C1 .* G3.^2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(3/2) ...
    .* sqrt(w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2)))) ...
    ./ (sqrt((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2) ...
    .* sqrt((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2)));

R41SENS = abs((G4 .* sqrt(w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2) ...
    .* sqrt(w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2) ...
    .* (((w.^2 .* (G11 + G12) .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)) ...
    .* sqrt((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2) ...
    .* sqrt((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2)) ...
    ./ (C1 .* G3 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(3/2) ...
    .* sqrt(w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2))) ...
    + (G11.^2 .* w.^2 .* (G4 ./ G3 + 1) ...
    .* sqrt((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2)) ...
    ./ (C1.^2 .* G3 .* sqrt(w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2) ...
    .* sqrt(w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2) ...
    .* sqrt((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2)))) ...
    ./ (sqrt((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2) ...
    .* sqrt((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2)));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%SECOND SECTION%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

C12SENS = abs((C3 .* (((2 .* w.^2 .* (G6 ./ C3.^2 - (G8 .* (G51 + G52)) ./ (C3.^2 .* G7)) ...
    .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)) ...
    - (2 .* G6 .* (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)) .* (G51 + G52)) ...
    ./ (C3.^2 .* C4)) ...
    .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)) ...
    ./ (2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(3/2)) ...
    - (G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2 .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2)) ...
    ./ (C3.^3 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2))) ...
    .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2)) ...
    ./ (((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)));

C22SENS = abs((C4 .* ((2 .* G6 .* w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7))) ./ C4.^2 ...
    - (2 .* G6 .* (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)) .* (G51 + G52)) ./ (C3 .* C4.^2))) ...
    ./ (2 .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2)));

R112SENS = abs((G51 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2) ...
    .* ((((2 .* G6 .* (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4))) ./ (C3 .* C4) ...
    + (2 .* G8 .* w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7))) ./ (C3 .* G7)) ...
    .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)) ...
    ./ (2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(3/2)) ...
    + (G51 .* w.^2 .* (G8 ./ G7 + 1).^2 ...
    .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2)) ...
    ./ (C3.^2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)))) ...
    ./ (((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)));

R122SENS = abs((G52 .* ((2 .* G6 .* (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4))) ./ (C3 .* C4) ...
    + (2 .* G8 .* w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7))) ./ (C3 .* G7))) ...
    ./ (2 .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2)));

R22SENS = abs(-(G6 .* (2 .* w.^2 .* (1 ./ C3 + 1 ./ C4) .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)) ...
    - (2 .* (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)) .* (G51 + G52)) ./ (C3 .* C4))) ...
    ./ (2 .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2)));

R32SENS = abs(-(G7 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2) ...
    .* ((G8 .* G51.^2 .* w.^2 .* (G8 ./ G7 + 1) ...
    .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2)) ...
    ./ (C3.^2 .* G7.^2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)) ...
    + (G8 .* w.^2 .* (G51 + G52) .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)) ...
    .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)) ...
    ./ (C3 .* G7.^2 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(3/2)))) ...
    ./ (((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)));

R42SENS = abs((G8 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2) ...
    .* ((w.^2 .* (G51 + G52) .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)) ...
    .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)) ...
    ./ (C3 .* G7 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(3/2)) ...
    + (G51.^2 .* w.^2 .* (G8 ./ G7 + 1) ...
    .* ((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2)) ...
    ./ (C3.^2 .* G7 .* (w.^2 .* (G2 ./ C1 + G2 ./ C2 - (G4 .* (G11 + G12)) ./ (C1 .* G3)).^2 ...
    + (w.^2 - (G2 .* (G11 + G12)) ./ (C1 .* C2)).^2).^(1/2) ...
    .* (w.^2 .* (G6 ./ C3 + G6 ./ C4 - (G8 .* (G51 + G52)) ./ (C3 .* G7)).^2 ...
    + (w.^2 - (G6 .* (G51 + G52)) ./ (C3 .* C4)).^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)))) ...
    ./ (((G11.^2 .* w.^2 .* (G4 ./ G3 + 1).^2) ./ C1.^2).^(1/2) ...
    .* ((G51.^2 .* w.^2 .* (G8 ./ G7 + 1).^2) ./ C3.^2).^(1/2)));


SENS_TOTAL_1 = sqrt(C1SENS.^2 + C2SENS.^2 + R111SENS.^2 + R121SENS.^2 + ...
    R21SENS.^2 + R31SENS.^2 + R41SENS.^2);
SENS_TOTAL_2 = sqrt(C12SENS.^2 + C22SENS.^2 + R112SENS.^2 + R122SENS.^2 + ...
    R22SENS.^2 + R32SENS.^2 + R42SENS.^2);
SENS_TOTAL = sqrt(C1SENS.^2 + C2SENS.^2 + R111SENS.^2 + R121SENS.^2 + ...
    R21SENS.^2 + R31SENS.^2 + R41SENS.^2 + C12SENS.^2 + C22SENS.^2 + R112SENS.^2 + R122SENS.^2 + ...
    R22SENS.^2 + R32SENS.^2 + R42SENS.^2);


%% Plotting results for cascade structure:
%First section:
figure;
semilogx(f, C1SENS, '--m', 'LineWidth', 1);
hold on;
semilogx(f, C2SENS, '--c', 'LineWidth', 1);
semilogx(f, R111SENS, 'g', 'LineWidth', 1);
semilogx(f, R121SENS, 'r', 'LineWidth', 1);
semilogx(f, R21SENS, 'b', 'LineWidth', 1);
semilogx(f, R31SENS, 'k', 'LineWidth', 1);
%semilogx(f, R41SENS, 'y', 'LineWidth', 1);
xlim([400 40000]);
xticks([400, 4000, 40000]);
legend('C_{11}', 'C_{21}', 'R_{111}', 'R_{121}', 'R_{21}', 'R_{31} = R_{41}', 'Location', 'best');
grid on;
xlabel('f [Hz]');
ylabel('I_s(f)');
title('Schoefflerova osjetljivost elemenata prve sekcije kaskadne strukture');


%Second section:
figure;
semilogx(f, C12SENS, '--m', 'LineWidth', 1);
hold on;
semilogx(f, C22SENS, '--c', 'LineWidth', 1);
semilogx(f, R112SENS, 'g', 'LineWidth', 1);
semilogx(f, R122SENS, 'r', 'LineWidth', 1);
semilogx(f, R22SENS, 'b', 'LineWidth', 1);
semilogx(f, R32SENS, 'k', 'LineWidth', 1);
%semilogx(f, R42SENS, 'y', 'LineWidth', 1);
xlim([400 40000]);
xticks([400, 4000, 40000]);
legend('C_{12}', 'C_{22}', 'R_{112}', 'R_{122}', 'R_{22}', 'R_{32} = R_{42}', 'Location', 'best');
grid on;
xlabel('f [Hz]');
ylabel('I_s(f)');
title('Schoefflerova osjetljivost elemenata druge sekcije kaskadne strukture');


%Total cascade sensitivity:
figure;
semilogx(f, SENS_TOTAL_1, '--b', 'LineWidth', 0.5);
hold on;
semilogx(f, SENS_TOTAL_2, '--r', 'LineWidth', 0.5);
semilogx(f, SENS_TOTAL, 'k', 'LineWidth', 1);
xlim([400 40000]);
xticks([400, 4000, 40000]);
legend('Prva sekcija', 'Druga sekcija', 'Ukupna osjetljivost', 'Location', 'northwest');
grid on;
xlabel('f [Hz]');
ylabel('I_s(f)');
title('Ukupna Schoefflerova osjetljivost kaskadne strukture');
% inset_ax = axes('Position', [0.64 0.65 0.25 0.25]);
% box on;
% hold on;
% axes(inset_ax);
% semilogx(f, SENS_TOTAL_1, '--b', 'LineWidth', 0.5);
% hold on;
% semilogx(f, SENS_TOTAL_2, '--r', 'LineWidth', 0.5);
% semilogx(f, SENS_TOTAL, 'k', 'LineWidth', 1);
% xlim([3200, 4800]);
% ylim([15, 30]);
% grid on;
% set(inset_ax, 'XTick', [3500, 4000, 4500], 'YTick', [20, 25, 30]);
% hold off;











%% Sensitivity calculation for CBQ structure:
%Symbolic variables:
syms G1 G11 G12 G2 G3 G4 C1 C2 s w real
syms G5 G51 G52 G6 G7 G8 C3 C4 real
syms R10 R20 R30 R40 real

numCBQ = H_magCAS;
denCBQ = 1 + (R30/R40)*H_magCAS;
H_magCBQ = numCBQ / denCBQ;
disp('|H(jw)| of CBQ structure: ');
pretty(H_magCBQ);

%Calculating Schoeffler sensitivity dH_mag/dx_i * X/H_mag:
SensC1CBQ = schoeffler_sensitivity(H_magCBQ, C1);     SensC12CBQ = schoeffler_sensitivity(H_magCBQ, C3);
SensC2CBQ = schoeffler_sensitivity(H_magCBQ, C2);     SensC22CBQ = schoeffler_sensitivity(H_magCBQ, C4);
SensR111CBQ = schoeffler_sensitivity(H_magCBQ, G11);  SensR112CBQ = schoeffler_sensitivity(H_magCBQ, G51);
SensR121CBQ = schoeffler_sensitivity(H_magCBQ, G12);  SensR122CBQ = schoeffler_sensitivity(H_magCBQ, G52);
SensR21CBQ = schoeffler_sensitivity(H_magCBQ, G2);    SensR22CBQ = schoeffler_sensitivity(H_magCBQ, G6);
SensR31CBQ = schoeffler_sensitivity(H_magCBQ, G3);    SensR32CBQ = schoeffler_sensitivity(H_magCBQ, G7);
SensR41CBQ = schoeffler_sensitivity(H_magCBQ, G4);    SensR42CBQ = schoeffler_sensitivity(H_magCBQ, G8);

SensR10 = schoeffler_sensitivity(H_magCBQ, R10);      SensR20 = schoeffler_sensitivity(H_magCBQ, R20);
SensR30 = schoeffler_sensitivity(H_magCBQ, R30);      SensR40 = schoeffler_sensitivity(H_magCBQ, R40);


%Declaring denormalized element values for CBQ structure:
C1 = 1e-8;          C3 = 1e-8;
C2 = 1e-8;          C4 = 1e-8;
G11 = 1/48666;      G51 = 1/48666;
G12 = 1/4333;       G52 = 1/4333;
G2 = 1/3978.9;      G6 = 1/3978.9;
G3 = 1/7350.6;      G7 = 1/7350.6;
G4 = 1/3978.9;      G8 = 1/3978.9;
R10 = 2325.65;      R20 = 3978.89;
R30 = 2325.65;      R40 = 3978.89;

%Declaring OPTIMIZED denormalized element values for CBQ structure:
% C1 = 9.702e-7;          C3 = 1e-9;
% C2 = 1e-9;          C4 = 1e-9;
% G11 = 1/2000;      G51 = 1/2000;
% G12 = 1/2000;       G52 = 1/2000;
% G2 = 1/2000;      G6 = 1/2000;
% G3 = 1/2000;      G7 = 1/2000;
% G4 = 1/2000;      G8 = 1/2000;
% R10 = 2000;      R20 = 2000;
% R30 = 2000;      R40 = 2000;


%% Calculating vector variables of sensitivity for each element:
f = logspace(log10(400), log10(40000), 10000);  
w = 2 * pi * f;


C1SENSCBQ = abs(-(C1.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2 ...
    .*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) ...
    ./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + ...
    G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + ...
    (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).*((((R30.*(2.*w.^2.*(G2./C1.^2 - ...
    (G4.*(G11 + G12))./(C1.^2.*G3)).*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)) - ...
    (2.*G2.*(w.^2 - (G2.*(G11 + G12))./(C1.*C2)).*(G11 + G12))./(C1.^2.*C2)).*((G11.^2.*w.^2 ...
    .*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) ...
    ./(2.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(3./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) - ...
    (G11.^2.*R30.*w.^2.*(G4./G3 + 1).^2.*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) ...
    ./(C1.^3.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ... 
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((G11.^2.*w.^2 ...
    .*(G4./G3 + 1).^2)./C1.^2).^(1./2))).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./((w.^2.*(G2./C1 + G2./C2 - ... 
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2) ...
    .*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ... 
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2) ...
    .*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2)) + 1).^2) - ((2.*w.^2.*(G2./C1.^2 - (G4.*(G11 + G12))./(C1.^2.*G3)) ...
    .*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)) - (2.*G2.*(w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).*(G11 + G12))./(C1.^2.*C2)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(2.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(3./2) ...
    .*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ... 
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2 ...
    .*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ... 
    ./(C3.*C4)).^2).^(1./2)) + 1)) + (G11.^2.*w.^2.*(G4./G3 + 1).^2.*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2))./(C1.^3.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - ... 
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2) ...
    .*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ... 
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).*((G11.^2 ...
    .*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2))))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)));

C2SENSCBQ = abs((C2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1/2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1/2).*((((2.*G2.*w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3))) ...
    ./C2.^2 - (2.*G2.*(w.^2 - (G2.*(G11 + G12))./(C1.*C2)).*(G11 + G12))./(C1.*C2.^2)).*((G11.^2.*w.^2.*(G4./G3 ...
    + 1).^2)./C1.^2).^(1/2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1/2))./(2.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(3/2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1/2).*((R30 ...
    .*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1/2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)/C3.^2).^(1/2))./(R40.*(w.^2 ...
    .*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1/2).*(w.^2 ...
    .*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1/2)) ...
    + 1)) - (G11.^2.*G51.^2.*R30.*w.^4.*((2.*G2.*w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)))./C2.^2 ...
    - (2.*G2.*(w.^2 - (G2.*(G11 + G12))./(C1.*C2)).*(G11 + G12))./(C1.*C2.^2)).*(G4./G3 + 1).^2.*(G8./G7 + 1).^2) ...
    ./(2.*C1.^2.*C3.^2.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^2.*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1/2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2) ...
    .^(1/2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1/2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + ... 
    G52))./(C3.*C4)).^2).^(1/2)) + 1).^2)).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1/2).*((G51.^2 ...
    .*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1/2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1/2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 ...
    + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1/2)) + 1))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2) ...
    ./C1.^2).^(1/2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1/2)));

R111SENSCBQ = abs((G11.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2 ...
    .*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) ...
    ./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + ...
    G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + ...
    (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).*((((2.*G2.*(w.^2 - (G2.*(G11 + ...
    G12))./(C1.*C2)))./(C1.*C2) + (2.*G4.*w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12)) ...
    ./(C1.*G3)))./(C1.*G3)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2 ... 
    .*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + ...
    G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(3./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2) ...
    .*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1)) - ...
    (((R30.*((2.*G2.*(w.^2 - (G2.*(G11 + G12))./(C1.*C2)))./(C1.*C2) + (2.*G4.*w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)))./(C1.*G3)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2) ...
    ./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(2.*R40 ...
    .*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(3./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + ... 
    (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + (G11.*R30.*w.^2.*(G4./G3 + ...
    1).^2.*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(C1.^2.*R40.*(w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2) ... 
    .^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + ...
    G52))./(C3.*C4)).^2).^(1./2).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2))) ... 
    .*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + ... 
    1).^2)./C3.^2).^(1./2))./((w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2 ...
    .*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2) ...
    .^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).^2) + ...
    (G11.*w.^2.*(G4./G3 + 1).^2.*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(C1.^2 ...
    .*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + ...
    (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + ...
    1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2 ...
    .*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)) ...
    .^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2))))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2)));

R121SENSCBQ = abs((G12.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)) ...
    .^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2) ...
    ./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1) ...
    .*((((2.*G2.*(w.^2 - (G2.*(G11 + G12))./(C1.*C2)))./(C1.*C2) + (2.*G4.*w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)))./(C1.*G3)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12)) ...
    ./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(3./2).*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30 ...
    .*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2) ...
    .^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + ... 
    G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ... 
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1)) - (G11.^2.*G51.^2.*R30.*w.^4.*(G4./G3 + 1).^2 ...
    .*(G8./G7 + 1).^2.*((2.*G2.*(w.^2 - (G2.*(G11 + G12))./(C1.*C2)))./(C1.*C2) + (2.*G4.*w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)))./(C1.*G3)))./(2.*C1.^2.*C3.^2.*R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^2.*(w.^2.*(G6./C3 + ... 
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).*((R30.*((G11.^2 ...
    .*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) ...
    ./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ... 
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).^2)))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)));

R21SENSCBQ = abs(-(G2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + ...
    G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*(((2.*w.^2.*(1./C1 + 1./C2).*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)) - (2.*(w.^2 - (G2.*(G11 + G12))./(C1.*C2)).*(G11 + G12))./(C1.*C2)) ...
    .*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2) ...
    .^(1./2))./(2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(3./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ... 
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + ...
    G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1)) - ... 
    (G11.^2.*G51.^2.*R30.*w.^4.*(2.*w.^2.*(1./C1 + 1./C2).*(G2./C1 + G2./C2 - (G4.*(G11 + G12)) ...
    ./(C1.*G3)) - (2.*(w.^2 - (G2.*(G11 + G12))./(C1.*C2)).*(G11 + G12))./(C1.*C2)).*(G4./G3 + ...
    1).^2.*(G8./G7 + 1).^2)./(2.*C1.^2.*C3.^2.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12)) ...
    ./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^2.*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).*((R30.*((G11.^2 ...
    .*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) ...
    ./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).^2)).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + ...
    1))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2)));

R31SENSCBQ = abs(-(G3.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + ...
    (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + ...
    G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1) ...
    .*((G4.*G11.^2.*w.^2.*(G4./G3 + 1).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(C1.^2.*G3.^2 ...
    .*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ... 
    (G4.*(G11 + G12))./(C1.*G3)) .^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2 ...
    .*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2) ...
    .^(1./2)) + 1).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2)) - (((G4.*G11.^2.*R30.*w.^2 ...
    .*(G4./G3 + 1).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(C1.^2.*G3.^2.*R40.*(w.^2 ...
    .*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2) ...
    .^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2)) + (G4.*R30.*w.^2.*(G11 + ...
    G12).*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(C1.*G3.^2.*R40.*(w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(3./2) ...
    .*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2))).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2 ...
    .*(G8./G7 + 1).^2)./C3.^2).^(1./2))./((w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + ...
    1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2) ...
    .*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2)) + 1).^2) + (G4.*w.^2.*(G11 + G12).*(G2./C1 + G2./C2 - (G4.*(G11 + ... 
    G12))./(C1.*G3)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2))./(C1.*G3.^2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(3./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + ...
    1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2) ...
    .*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)) ...
    .^2).^(1./2)) + 1))))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2)));

R41SENSCBQ = abs((G4.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)) ...
    .^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2) ...
    ./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + ...
    1).*((w.^2.*(G11 + G12).*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).*((G11.^2.*w.^2.*(G4./G3 + ...
    1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(C1.*G3.*(w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(3./2) ...
    .*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)) ...
    .^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + ...
    (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1)) - (((R30.*w.^2.*(G11 + G12).*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2 ...
    .*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(C1.*G3.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12)) ...
    ./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(3./2).*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + (G11.^2 ...
    .*R30.*w.^2.*(G4./G3 + 1).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(C1.^2.*G3.*R40 ...
    .*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)) ...
    .^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2))).*((G11.^2 ...
    .*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) ...
    ./((w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + ...
    1).^2) + (G11.^2.*w.^2.*(G4./G3 + 1).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(C1.^2 ...
    .*G3.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1 ...
    .*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + ...
    G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2 ...
    .*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1 ...
    .*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).*((G11.^2.*w.^2 ...
    .*(G4./G3 + 1).^2)./C1.^2).^(1./2))))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2 ...
    .*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%SECOND SECTION%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

C12SENSCBQ = abs(-(C3.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + ...
    (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1) ...
    .*((((R30.*(2.*w.^2.*(G6./C3.^2 - (G8.*(G51 + G52))./(C3.^2.*G7)).*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)) - (2.*G6.*(w.^2 - (G6.*(G51 + G52))./(C3.*C4)).*(G51 + G52))./(C3.^2.*C4)).*((G11.^2 ...
    .*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(2 ...
    .*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1 ...
    .*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + ...
    G52))./(C3.*C4)).^2).^(3./2)) - (G51.^2.*R30.*w.^2.*(G8./G7 + 1).^2.*((G11.^2.*w.^2.*(G4./G3 + ...
    1).^2)./C1.^2).^(1./2))./(C3.^3.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2) ...
    ./C3.^2).^(1./2))).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2))./((w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + ...
    (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + ...
    1).^2) - ((2.*w.^2.*(G6./C3.^2 - (G8.*(G51 + G52))./(C3.^2.*G7)).*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)) - (2.*G6.*(w.^2 - (G6.*(G51 + G52))./(C3.*C4)).*(G51 + G52))./(C3.^2.*C4)) ...
    .*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) ...
    ./(2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(3./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + ... 
    G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1)) + ...
    (G51.^2.*w.^2.*(G8./G7 + 1).^2.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2))./(C3.^3.*(w.^2 ...
    .*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2) ...
    .^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2 ...
    .*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)) ...
    .^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).*((G51.^2.*w.^2.*(G8./G7 + 1) ...
    .^2)./C3.^2).^(1./2))))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2)));

C22SENSCBQ = abs((C4.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)) ...
    .^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((((2.*G6.*w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)))./C4.^2 - (2.*G6.*(w.^2 - (G6.*(G51 + G52))./(C3.*C4)).*(G51 + G52)) ...
    ./(C3.*C4.^2)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2) ...
    ./C3.^2).^(1./2))./(2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)) ...
    .^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(3./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2) ...
    ./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1)) - ...
    (G11.^2.*G51.^2.*R30.*w.^4.*((2.*G6.*w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)))./C4.^2 - ...
    (2.*G6.*(w.^2 - (G6.*(G51 + G52))./(C3.*C4)).*(G51 + G52))./(C3.*C4.^2)).*(G4./G3 + 1).^2.*(G8./G7 + ...
    1).^2)./(2.*C1.^2.*C3.^2.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^2.*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + ...
    G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).^2)) ...
    .*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2) ...
    .^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)));

R112SENSCBQ = abs((G51.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)) ...
    .^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2) ...
    ./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1) ...
    .*((((2.*G6.*(w.^2 - (G6.*(G51 + G52))./(C3.*C4)))./(C3.*C4) + (2.*G8.*w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)))./(C3.*G7)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51 ...
    .^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1 ...
    .*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(3./2).*((R30.*((G11.^2.*w.^2.*(G4 ...
    ./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2 ...
    ./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2) ...
    .*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)) ...
    .^2).^(1./2)) + 1)) - (((R30.*((2.*G6.*(w.^2 - (G6.*(G51 + G52))./(C3.*C4)))./(C3.*C4) + (2.*G8 ...
    .*w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)))./(C3.*G7)).*((G11.^2.*w.^2.*(G4./G3 + 1) ...
    .^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(2.*R40.*(w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2 ...
    .*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2) ...
    .^(3./2)) + (G51.*R30.*w.^2.*(G8./G7 + 1).^2.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2)) ...
    ./(C3.^2.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))) ...
    .*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2) ...
    .^(1./2))./((w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + ...
    G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).^2) + ...
    (G51.*w.^2.*(G8./G7 + 1).^2.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2))./(C3.^2.*(w.^2 ...
    .*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2) ...
    .^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2 ...
    .*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)) ...
    .^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2))))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2 ...
    .*(G8./G7 + 1).^2)./C3.^2).^(1./2)));

R122SENSCBQ = abs((G52.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2 ...
    .*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) ...
    ./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).*((((2.*G6.*(w.^2 - (G6.*(G51 + G52))./(C3.*C4))) ...
    ./(C3.*C4) + (2.*G8.*w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)))./(C3.*G7)).*((G11.^2 ...
    .*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) ...
    ./(2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12)) ...
    ./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(3./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + ...
    G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1)) - ...
    (G11.^2.*G51.^2.*R30.*w.^4.*(G4./G3 + 1).^2.*(G8./G7 + 1).^2.*((2.*G6.*(w.^2 - (G6.*(G51 + ...
    G52))./(C3.*C4)))./(C3.*C4) + (2.*G8.*w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7))) ...
    ./(C3.*G7)))./(2.*C1.^2.*C3.^2.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^2.*((R30.*((G11.^2.*w.^2.*(G4./G3 + ...
    1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2) ...
    .*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2)) + 1).^2)))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)));

R22SENSCBQ = abs(-(G6.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
(G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + ...
    (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*(((2.*w.^2.*(1./C3 + 1./C4).*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)) - (2.*(w.^2 - (G6.*(G51 + G52))./(C3.*C4)).*(G51 + G52))./(C3.*C4)) ...
    .*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2) ...
    .^(1./2))./(2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + ...
    G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(3./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + ...
    G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1)) - ...
    (G11.^2.*G51.^2.*R30.*w.^4.*(2.*w.^2.*(1./C3 + 1./C4).*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)) - (2.*(w.^2 - (G6.*(G51 + G52))./(C3.*C4)).*(G51 + G52))./(C3.*C4)).*(G4./G3 + 1) ...
    .^2.*(G8./G7 + 1).^2)./(2.*C1.^2.*C3.^2.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)) ...
    .^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3 ...
    .*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^2.*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2) ...
    ./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1) ...
    .^2)).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2) ...
    ./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2 ...
    .*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + ...
    (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)));

R32SENSCBQ = abs(-(G7.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3 ...
    .*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + ...
    1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w ...
    .^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)) ...
    .^2).^(1./2)) + 1).*((G8.*G51.^2.*w.^2.*(G8./G7 + 1).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2))./(C3.^2.*G7.^2.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)) ...
    .^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2) ...
    ./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) - (((G8.*G51.^2.*R30.*w.^2.*(G8./G7 + 1) ...
    .*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2))./(C3.^2.*G7.^2.*R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((G51.^2 ...
    .*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)) + (G8.*R30.*w.^2.*(G51 + G52).*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2 ...
    .*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(C3.*G7.^2.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12)) ...
    ./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(3./2))).*((G11.^2 ...
    .*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./((w.^2 ...
    .*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2) ...
    .^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2 ...
    .*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)) ...
    .^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1).^2) + (G8.*w.^2.*(G51 + G52) ...
    .*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(C3.*G7.^2.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(3./2) ...
    .*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2) ...
    .^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + ...
    G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - ...
    (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1))))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)));

R42SENSCBQ = abs((G8.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2 ...
    .*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40 ...
    .*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)) ...
    .^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + ...
    G52))./(C3.*C4)).^2).^(1./2)) + 1).*((w.^2.*(G51 + G52).*(G6./C3 + G6./C4 - (G8.*(G51 + ...
    G52))./(C3.*G7)).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + ...
    1).^2)./C3.^2).^(1./2))./(C3.*G7.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(3./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + ...
    1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2 ...
    .*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2) ...
    .^(1./2)) + 1)) - (((R30.*w.^2.*(G51 + G52).*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)) ...
    .*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2) ...
    .^(1./2))./(C3.*G7.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)) ...
    .^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(3./2)) + (G51.^2.*R30.*w.^2.*(G8./G7 + 1) ...
    .*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2))./(C3.^2.*G7.*R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2) ...
    .*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./((w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + ...
    G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - ...
    (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2 ...
    .*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40 ...
    .*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)) ...
    .^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52)) ...
    ./(C3.*C4)).^2).^(1./2)) + 1).^2) + (G51.^2.*w.^2.*(G8./G7 + 1).*((G11.^2.*w.^2.*(G4./G3 + 1).^2) ...
    ./C1.^2).^(1./2))./(C3.^2.*G7.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + ...
    (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2) ...
    .^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6 ...
    ./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) +...
    1).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))))./(((G11.^2.*w.^2.*(G4./G3 + 1).^2) ...
    ./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)));



R10SENSCBQ = 0*ones(1,10000);
R20SENSCBQ = 0*ones(1,10000);
R30SENSCBQ = abs(-(G11.^2.*G51.^2.*R30.*w.^4.*(G4./G3 + 1).^2.*(G8./G7 + ...
    1).^2)./(C1.^2.*C3.^2.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + ...
    (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52)) ...
    ./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + ...
    1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + ...
    G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2) ...
    .*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)) ...
    .^2).^(1./2)) + 1).*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1) ...
    .^2)./C3.^2).^(1./2)));
R40SENSCBQ = abs((G11.^2.*G51.^2.*R30.*w.^4.*(G4./G3 + 1).^2.*(G8./G7 + 1).^2) ...
    ./(C1.^2.*C3.^2.*R40.*(w.^2.*(G2./C1 + G2./C2 - (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - ...
    (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + G6./C4 - (G8.*(G51 + G52))./(C3.*G7)) ...
    .^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2).*((R30.*((G11.^2.*w.^2.*(G4./G3 + 1).^2) ...
    ./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2))./(R40.*(w.^2.*(G2./C1 + G2./C2 - ...
    (G4.*(G11 + G12))./(C1.*G3)).^2 + (w.^2 - (G2.*(G11 + G12))./(C1.*C2)).^2).^(1./2).*(w.^2.*(G6./C3 + ...
    G6./C4 - (G8.*(G51 + G52))./(C3.*G7)).^2 + (w.^2 - (G6.*(G51 + G52))./(C3.*C4)).^2).^(1./2)) + 1) ...
    .*((G11.^2.*w.^2.*(G4./G3 + 1).^2)./C1.^2).^(1./2).*((G51.^2.*w.^2.*(G8./G7 + 1).^2)./C3.^2).^(1./2)));


SENS_TOTAL_1CBQ_nonopt = sqrt(C1SENSCBQ.^2 + C2SENSCBQ.^2 + R111SENSCBQ.^2 + R121SENSCBQ.^2 + ...
    R21SENSCBQ.^2 + R31SENSCBQ.^2 + R41SENSCBQ.^2);
SENS_TOTAL_2CBQ = sqrt(C12SENSCBQ.^2 + C22SENSCBQ.^2 + R112SENSCBQ.^2 + R122SENSCBQ.^2 + ...
    R22SENSCBQ.^2 + R32SENSCBQ.^2 + R42SENSCBQ.^2);
SENS_TOTAL_DIFF = sqrt(R10SENSCBQ.^2 + R20SENSCBQ.^2 + R30SENSCBQ.^2 + R40SENSCBQ.^2);
SENS_TOTALCBQ = sqrt(C1SENSCBQ.^2 + C2SENSCBQ.^2 + R111SENSCBQ.^2 + R121SENSCBQ.^2 + ...
    R21SENSCBQ.^2 + R31SENSCBQ.^2 + R41SENSCBQ.^2 + C12SENSCBQ.^2 + C22SENSCBQ.^2 + R112SENSCBQ.^2 + ...
    R122SENSCBQ.^2 + R22SENSCBQ.^2 + R32SENSCBQ.^2 + R42SENSCBQ.^2 + R10SENSCBQ.^2 + R20SENSCBQ.^2 + ...
    R30SENSCBQ.^2 + R40SENSCBQ.^2);


%% Plotting results for CBQ structure:
%Differential amplifier:
figure;
semilogx(f, R10SENSCBQ, 'k', 'LineWidth', 1);
hold on;
%semilogx(f, R20SENSCBQ, 'g', 'LineWidth', 1);
semilogx(f, R30SENSCBQ, 'b', 'LineWidth', 1);
%semilogx(f, R40SENSCBQ, 'r', 'LineWidth', 1);
% semilogx(f, SENS_DIFF, 'k', 'LineWidth', 1);
xlim([400 40000]);
xticks([400, 4000, 40000]);
legend('R_{10} = R_{20}', 'R_{30} = R_{40}', 'Location', 'best');
grid on;
xlabel('f [Hz]');
ylabel('I_s(f)');
title('Schoefflerova osjetljivost diferencijalnog pojačala');


%First section:
figure;
semilogx(f, C1SENSCBQ, '--m', 'LineWidth', 1);
hold on;
semilogx(f, C2SENSCBQ, '--c', 'LineWidth', 1);
semilogx(f, R111SENSCBQ, 'g', 'LineWidth', 1);
semilogx(f, R121SENSCBQ, 'r', 'LineWidth', 1);
semilogx(f, R21SENSCBQ, 'b', 'LineWidth', 1);
semilogx(f, R31SENSCBQ, 'k', 'LineWidth', 1);
%semilogx(f, R41SENSCBQ, 'y', 'LineWidth', 1);
xlim([400 40000]);
xticks([400, 4000, 40000]);
legend('C_{11}', 'C_{21}', 'R_{111}', 'R_{121}', 'R_{21}', 'R_{31} = R_{41}', 'Location', 'best');
grid on;
xlabel('f [Hz]');
ylabel('I_s(f)');
title('Schoefflerova osjetljivost elemenata prve sekcije bikvartne strukture');

%Second section:
figure;
semilogx(f, C12SENSCBQ, '--m', 'LineWidth', 1);
hold on;
semilogx(f, C22SENSCBQ, '--c', 'LineWidth', 1);
semilogx(f, R112SENSCBQ, 'g', 'LineWidth', 1);
semilogx(f, R122SENSCBQ, 'r', 'LineWidth', 1);
semilogx(f, R22SENSCBQ, 'b', 'LineWidth', 1);
semilogx(f, R32SENSCBQ, 'k', 'LineWidth', 1);
% semilogx(f, R42SENSCBQ, 'y', 'LineWidth', 1);
xlim([400 40000]);
xticks([400, 4000, 40000]);
legend('C_{12}', 'C_{22}', 'R_{112}', 'R_{122}', 'R_{22}', 'R_{32} = R_{42}', 'Location', 'best');
grid on;
xlabel('f [Hz]');
ylabel('I_s(f)');
title('Schoefflerova osjetljivost elemenata druge sekcije bikvartne strukture');

%Total cascade sensitivity:
figure;
semilogx(f, SENS_TOTAL_1CBQ_nonopt, 'b', 'LineWidth', 1);
hold on;
%semilogx(f, SENS_TOTAL_2CBQ, 'm', 'LineWidth', 0.5);
semilogx(f, SENS_TOTAL_DIFF, 'r', 'LineWidth', 1);
semilogx(f, SENS_TOTALCBQ, 'k', 'LineWidth', 1);
xlim([400 40000]);
xticks([400, 4000, 40000]);
legend('Prva sekcija = Druga sekcija', 'Diferencijalno pojačalo', 'Ukupna osjetljivost', 'Location', 'best');
grid on;
xlabel('f [Hz]');
ylabel('I_s(f)');
title('Ukupna Schoefflerova osjetljivost bikvartne strukture');

%Comparison with cascade structure:
figure;
semilogx(f, SENS_TOTAL, 'r', 'LineWidth', 1);
hold on;
semilogx(f, SENS_TOTALCBQ, 'b', 'LineWidth', 1);
xlim([400 40000]);
xticks([400, 4000, 40000]);
legend('Kaskadna struktura', 'Bikvartna struktura', 'Location', 'best');
grid on;
xlabel('f [Hz]');
ylabel('I_s(f)');
title('Usporedba osjetljivosti kaskadne i bikvartne strukture');







%% Sensitivity optimization for CBQ structure:
%Re-declaration of NON-OPTIMIZED element values:
C1_val = 1e-8;          C3_val = 1e-8;
C2_val = 1e-8;          C4_val = 1e-8;
G11_val = 1/48666;      G51_val = 1/48666;    R11_val = 48666;   R51_val = 48666;
G12_val = 1/4333;       G52_val = 1/4333;     R12_val = 4333;    R52_val = 4333;
G2_val = 1/3978.9;      G6_val = 1/3978.9;    R2_val = 3978.9;   R6_val = 3978.9;
G3_val = 1/7350.6;      G7_val = 1/7350.6;    R3_val = 7350.6;   R7_val = 7350.6;
G4_val = 1/3978.9;      G8_val = 1/3978.9;    R4_val = 3978.9;   R8_val = 3978.9;
R10_val = 2325.65;      R20_val = 3978.89;
R30_val = 2325.65;      R40_val = 3978.89;
G1_val = G11_val + G12_val;     R1_val = (R11_val*R12_val)/(R11_val+R12_val);
G111_val = G51_val + G52_val;   R111_val = (R51_val*R52_val)/(R51_val+R52_val);

run defineSymbolicSensitivityVectors               %Re-declaring the vector variables for sensitivity

K = linspace(0.1, 10, 1000);  %Sweep range for k
%Vector initialization for results:
M_vals = zeros(size(K));    %Multiparameter sensitivity
R2_vals = zeros(size(K));   %Values for R2 over the sweep
C2_vals = zeros(size(K));   %Values for C2 over the sweep
k_vals = zeros(size(K));

%Frequency range:
f = logspace(log10(400), log10(40000), 10000);  
w_val = 2 * pi * f;

%Creating functions to optimize code execution:
R111SENSCBQ_fun = matlabFunction(R111SENSCBQ, 'Vars', ...
    {G11, G12, G2, G3, G4, C1, C2, G51, G52, G6, G7, G8, C3, C4, R30, R40, w});
R121SENSCBQ_fun = matlabFunction(R121SENSCBQ, 'Vars', ...
    {G11, G12, G2, G3, G4, C1, C2, G51, G52, G6, G7, G8, C3, C4, R30, R40, w});
R21SENSCBQ_fun = matlabFunction(R21SENSCBQ, 'Vars', ...
    {G11, G12, G2, G3, G4, C1, C2, G51, G52, G6, G7, G8, C3, C4, R30, R40, w});
R31SENSCBQ_fun = matlabFunction(R31SENSCBQ, 'Vars', ...
    {G11, G12, G2, G3, G4, C1, C2, G51, G52, G6, G7, G8, C3, C4, R30, R40, w});
R41SENSCBQ_fun = matlabFunction(R41SENSCBQ, 'Vars', ...
    {G11, G12, G2, G3, G4, C1, C2, G51, G52, G6, G7, G8, C3, C4, R30, R40, w});
C1SENSCBQ_fun = matlabFunction(C1SENSCBQ, 'Vars', ...
    {G11, G12, G2, G3, G4, C1, C2, G51, G52, G6, G7, G8, C3, C4, R30, R40, w});
C2SENSCBQ_fun = matlabFunction(C2SENSCBQ, 'Vars', ...
    {G11, G12, G2, G3, G4, C1, C2, G51, G52, G6, G7, G8, C3, C4, R30, R40, w});


for i = 1:length(K)       %1 to 1000
    k = K(i);             %0.1 to 10 with step size 0.01

    R2_opt = k .* R1_val;         % R2 = k * R1
    C2_opt = C1_val ./ k;         % C2 = C1 / k    
    G2_opt = 1/R2_opt;
    
    C4_opt = C2_opt; G6_opt = G2_opt;
    
    %Calculating sensitivity for each element in each iteration:
    R111SENSCBQ_opt = R111SENSCBQ_fun(G11_val, G12_val, G2_opt, G3_val, G4_val, ...
    C1_val, C2_opt, G51_val, G52_val, G6_opt, G7_val, G8_val, ...
    C3_val, C4_opt, R30_val, R40_val, w_val);
    
    R121SENSCBQ_opt = R121SENSCBQ_fun(G11_val, G12_val, G2_opt, G3_val, G4_val, ...
    C1_val, C2_opt, G51_val, G52_val, G6_opt, G7_val, G8_val, ...
    C3_val, C4_opt, R30_val, R40_val, w_val);

    R21SENSCBQ_opt = R21SENSCBQ_fun(G11_val, G12_val, G2_opt, G3_val, G4_val, ...
    C1_val, C2_opt, G51_val, G52_val, G6_opt, G7_val, G8_val, ...
    C3_val, C4_opt, R30_val, R40_val, w_val);
    
    R31SENSCBQ_opt = R31SENSCBQ_fun(G11_val, G12_val, G2_opt, G3_val, G4_val, ...
    C1_val, C2_opt, G51_val, G52_val, G6_opt, G7_val, G8_val, ...
    C3_val, C4_opt, R30_val, R40_val, w_val);

    R41SENSCBQ_opt = R41SENSCBQ_fun(G11_val, G12_val, G2_opt, G3_val, G4_val, ...
    C1_val, C2_opt, G51_val, G52_val, G6_opt, G7_val, G8_val, ...
    C3_val, C4_opt, R30_val, R40_val, w_val);

    C1SENSCBQ_opt = C1SENSCBQ_fun(G11_val, G12_val, G2_opt, G3_val, G4_val, ...
    C1_val, C2_opt, G51_val, G52_val, G6_opt, G7_val, G8_val, ...
    C3_val, C4_opt, R30_val, R40_val, w_val);

    C2SENSCBQ_opt = C2SENSCBQ_fun(G11_val, G12_val, G2_opt, G3_val, G4_val, ...
    C1_val, C2_opt, G51_val, G52_val, G6_opt, G7_val, G8_val, ...
    C3_val, C4_opt, R30_val, R40_val, w_val);

    %Storing R2 and C2 values over the range:
    R2_vals(i) = R2_opt;
    C2_vals(i) = C2_opt;
    
    %Calculating total sensitivity of the first section:
    SENS_TOTAL_1CBQ = sqrt(C1SENSCBQ_opt.^2 + C2SENSCBQ_opt.^2 + R111SENSCBQ_opt.^2 + ...
        R121SENSCBQ_opt.^2 + R21SENSCBQ_opt.^2 + R31SENSCBQ_opt.^2 + R41SENSCBQ_opt.^2);

    M_SENS = trapz(f, SENS_TOTAL_1CBQ);
    M_vals(i) = M_SENS;
    k_vals(i) = k;
    disp(i)
end

%Plotting multiparameter sensitivity over the range:
figure;
plot(K, M_vals, 'k', 'LineWidth', 1);
title('Multiparametarska mjera osjetljivosti za prvu sekciju');
xlabel('$k$', 'Interpreter', 'latex');
ylabel('M');

%Calculating and plotting the derivative multiparameter sensitivity over the range:
dM_dk = diff(M_vals) ./ diff(k_vals);  
k_mid = (k_vals(1:end-1) + k_vals(2:end)) / 2;
figure;
plot(k_mid, dM_dk, 'r', 'LineWidth', 1.5);
xlabel('k');
ylabel('dM/dk');
title('Derivacija multiparametarske osjetljivosti prema koeficijentu K');
grid on;

%Declaration of OPTIMIZED element values for both sections:
R11_opt = 33747;   R51_opt = 33747;
R12_opt = 4510.7;  R52_opt = 4510.7;
R2_opt = 39789;    R6_opt = 39789;
R3_opt = 3769.6;   R7_opt = 3769.6;
R4_opt = 3978.9;   R8_opt = 3978.9;
C1_opt = 1e-8;     C3_opt = 1e-8;
C2_opt = 1e-9;     C4_opt = 1e-9;
R1_opt = R2_opt/10;
G11_opt = 1/R11_opt; G12_opt = 1/R12_opt; G2_opt = 1/R2_opt; G3_opt = 1/R3_opt; G4_opt = 1/R4_opt;
G51_opt = 1/R51_opt; G52_opt = 1/R52_opt; G6_opt = 1/R6_opt; G7_opt = 1/R7_opt; G8_opt = 1/R8_opt;
R10_opt = 2325.65;      R20_opt = 3978.89;
R30_opt = 2325.65;      R40_opt = 3978.89;


%Calculating sensitivity for each element in each iteration:
R111SENSCBQ_opt = R111SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);
    
R121SENSCBQ_opt = R121SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);

R21SENSCBQ_opt = R21SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);
    
R31SENSCBQ_opt = R31SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);

R41SENSCBQ_opt = R41SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);

C1SENSCBQ_opt = C1SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);

C2SENSCBQ_opt = C2SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);

SENS_TOTAL_1CBQOPT = sqrt(C1SENSCBQ_opt.^2 + C2SENSCBQ_opt.^2 + R111SENSCBQ_opt.^2 + ...
    R121SENSCBQ_opt.^2 + R21SENSCBQ_opt.^2 + R31SENSCBQ_opt.^2 + R41SENSCBQ_opt.^2);
SENS_TOTAL_2CBQOPT = SENS_TOTAL_1CBQOPT;

SENS_TOTALCBQ_OPT = sqrt(C1SENSCBQ_opt.^2 + C2SENSCBQ_opt.^2 + R111SENSCBQ_opt.^2 + ...
    R121SENSCBQ_opt.^2 + R21SENSCBQ_opt.^2 + R31SENSCBQ_opt.^2 + R41SENSCBQ_opt.^2 + ...
    C1SENSCBQ_opt.^2 + C2SENSCBQ_opt.^2 + R111SENSCBQ_opt.^2 + R121SENSCBQ_opt.^2 + ...
    R21SENSCBQ_opt.^2 + R31SENSCBQ_opt.^2 + R41SENSCBQ_opt.^2 + ...
    R10SENSCBQ.^2 + R20SENSCBQ.^2 + R30SENSCBQ.^2 + R40SENSCBQ.^2);


%Comparison with cascade and non-optimized CBQ structure:
figure;
semilogx(f, SENS_TOTAL, 'r', 'LineWidth', 1);
hold on;
semilogx(f, SENS_TOTALCBQ, 'b', 'LineWidth', 1);
semilogx(f, SENS_TOTALCBQ_OPT, 'm', 'LineWidth', 1);
xlim([400 40000]);
xticks([400, 4000, 40000]);
legend('Kaskadna struktura', 'Bikvartna struktura', 'Optimizirani bikvart', 'Location', 'best');
grid on;
xlabel('f [Hz]');
ylabel('I_s(f)');
title('Usporedba osjetljivosti realiziranih filtarskih struktura');


%% Declaration of OPTIMIZED element values for both sections (K = 5):
R11_opt = 35425.5; R51_opt = 35425.5;
R12_opt = 4482.3;  R52_opt = 4482.3;
R2_opt = 19894.5;  R6_opt = 19894.5;
R3_opt = 4167.5;   R7_opt = 4167.5;
R4_opt = 3978.9;   R8_opt = 3978.9;
C1_opt = 1e-8;     C3_opt = 1e-8;
C2_opt = 2e-9;     C4_opt = 2e-9;
R1_opt = R2_opt/10;
G11_opt = 1/R11_opt; G12_opt = 1/R12_opt; G2_opt = 1/R2_opt; G3_opt = 1/R3_opt; G4_opt = 1/R4_opt;
G51_opt = 1/R51_opt; G52_opt = 1/R52_opt; G6_opt = 1/R6_opt; G7_opt = 1/R7_opt; G8_opt = 1/R8_opt;
R10_opt = 2325.65;      R20_opt = 3978.89;
R30_opt = 2325.65;      R40_opt = 3978.89;

%Calculating sensitivity for each element in each iteration:
R111SENSCBQ_opt = R111SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);
    
R121SENSCBQ_opt = R121SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);

R21SENSCBQ_opt = R21SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);
    
R31SENSCBQ_opt = R31SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);

R41SENSCBQ_opt = R41SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);

C1SENSCBQ_opt = C1SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);

C2SENSCBQ_opt = C2SENSCBQ_fun(G11_opt, G12_opt, G2_opt, G3_opt, G4_opt, ...
    C1_opt, C2_opt, G51_opt, G52_opt, G6_opt, G7_opt, G8_opt, ...
    C3_opt, C4_opt, R30_opt, R40_opt, w_val);

SENS_TOTAL_1CBQOPT = sqrt(C1SENSCBQ_opt.^2 + C2SENSCBQ_opt.^2 + R111SENSCBQ_opt.^2 + ...
    R121SENSCBQ_opt.^2 + R21SENSCBQ_opt.^2 + R31SENSCBQ_opt.^2 + R41SENSCBQ_opt.^2);
SENS_TOTAL_2CBQOPT = SENS_TOTAL_1CBQOPT;

SENS_TOTALCBQ_OPTK5 = sqrt(C1SENSCBQ_opt.^2 + C2SENSCBQ_opt.^2 + R111SENSCBQ_opt.^2 + ...
    R121SENSCBQ_opt.^2 + R21SENSCBQ_opt.^2 + R31SENSCBQ_opt.^2 + R41SENSCBQ_opt.^2 + ...
    C1SENSCBQ_opt.^2 + C2SENSCBQ_opt.^2 + R111SENSCBQ_opt.^2 + R121SENSCBQ_opt.^2 + ...
    R21SENSCBQ_opt.^2 + R31SENSCBQ_opt.^2 + R41SENSCBQ_opt.^2 + ...
    R10SENSCBQ.^2 + R20SENSCBQ.^2 + R30SENSCBQ.^2 + R40SENSCBQ.^2);

% Comparison with cascade, non-optimized, and k=10 CBQ structure:
figure;
semilogx(f, SENS_TOTAL, 'r', 'LineWidth', 1);
hold on;
semilogx(f, SENS_TOTALCBQ, 'b', 'LineWidth', 1);
semilogx(f, SENS_TOTALCBQ_OPT, 'm', 'LineWidth', 1);
semilogx(f, SENS_TOTALCBQ_OPTK5, 'k', 'LineWidth', 1);
xlim([400 40000]);
xticks([400, 4000, 40000]);
legend('Kaskadna struktura', 'Bikvartna struktura', 'Optimizirani bikvart k=10', 'Optimizirani bikvart k=5', 'Location', 'best');
grid on;
xlabel('f [Hz]');
ylabel('I_s(f)');
title('Usporedba osjetljivosti realiziranih bikvartnih struktura');

%% Functions:
function S_H_X = schoeffler_sensitivity(H, X)
    %Schoeffler Sensitivity Calculation
    %Inputs:
    %H - Transfer function (symbolic)
    %X - Component (symbolic variable) with respect to which sensitivity is computed
    %Output:
    %Schoeffler sensitivity
    dH_dX = diff(H, X);
    S_H_X = (X / H) * dH_dX;
end
